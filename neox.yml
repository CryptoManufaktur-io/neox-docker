x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  neox:
    restart: "unless-stopped"
    build:
      context: ./neox
      dockerfile: Dockerfile
      args:
        - BINARY_URL=${BINARY_URL}
    image: neox:local
    pull_policy: never
    stop_grace_period: 5m
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - GENESIS_URL=${GENESIS_URL}
      - EXTRAS=${EXTRAS:-}
    volumes:
      - neox-data:/var/lib/neox
      - /etc/localtime:/etc/localtime:ro
      - ./private-config:/tmp/private-config:ro
    ports:
      - ${P2P_PORT:-30301}:${P2P_PORT:-30301}/tcp
      - ${P2P_PORT:-30301}:${P2P_PORT:-30301}/udp
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - geth
      - --datadir
      - /var/lib/neox
      - --identity
      - ${IDENTITY}
      - --networkid
      - ${NETWORK_ID}
      - --port
      - ${P2P_PORT:-30301}
      - --maxpeers
      - "50"
      - --syncmode
      - full
      - --bootnodes
      - ${BOOT_NODES}
      - --http
      - --http.addr
      - 0.0.0.0
      - --http.port
      - ${RPC_PORT:-8545}
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.addr
      - 0.0.0.0
      - --ws.port
      - ${WS_PORT:-8546}
      - --ws.origins=*
      - --metrics
      - --metrics.expensive
      - --pprof
      - --pprof.addr
      - 0.0.0.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-neox}.service=${RPC_HOST:-neox}
      - traefik.http.routers.${RPC_HOST:-neox}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-neox}.rule=Host(`${RPC_HOST:-neox}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-neox}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-neox}lb.service=${RPC_HOST:-neox}
      - traefik.http.routers.${RPC_HOST:-neox}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-neox}lb.rule=Host(`${RPC_LB:-neox-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-neox}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-neox}.loadbalancer.server.port=${RPC_PORT:-8545}
      - traefik.http.routers.${WS_HOST:-neoxws}.service=${WS_HOST:-neoxws}
      - traefik.http.routers.${WS_HOST:-neoxws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-neoxws}.rule=Host(`${WS_HOST:-neoxws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-neoxws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-neoxws}lb.service=${WS_HOST:-neoxws}
      - traefik.http.routers.${WS_HOST:-neoxws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-neoxws}lb.rule=Host(`${WS_LB:-neoxws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-neoxws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-neoxws}.loadbalancer.server.port=${WS_PORT:-8546}
      - metrics.scrape=true
      - metrics.path=/debug/metrics/prometheus
      - metrics.port=6060
      - metrics.network=neox

volumes:
  neox-data:
